import{_ as t,c as n,o as s,ah as a}from"./chunks/framework.C2OYgiIb.js";const h=JSON.parse('{"title":"Architecture Concepts","description":"","frontmatter":{},"headers":[],"relativePath":"master/architecture/introduction.md","filePath":"master/architecture/introduction.md","lastUpdated":1743568045000}'),i={name:"master/architecture/introduction.md"};function r(o,e,l,c,p,d){return s(),n("div",null,e[0]||(e[0]=[a(`<h1 id="architecture-concepts" tabindex="-1">Architecture Concepts <a class="header-anchor" href="#architecture-concepts" aria-label="Permalink to &quot;Architecture Concepts&quot;">​</a></h1><p><strong>Aureus ERP</strong> is a robust and modular ERP system built on <strong>Filament PHP</strong> and <strong>Laravel</strong>. The goal of this document is to provide an overview of how Aureus ERP works and its architectural concepts.</p><p>We embrace the power of <strong>open-source</strong> technologies, and Aureus ERP is developed using <strong>PHP</strong>, <strong>Laravel</strong>, <strong>Filament PHP</strong>, <strong>Alpine.js</strong>, <strong>Livewire</strong>, and <strong>Tailwind CSS</strong>.</p><p>Since <strong>Aureus ERP</strong> is designed for enterprise resource planning, it provides a structured approach to managing business operations, including user management, inventory, financials, and more. It offers both front-end and back-end features to enable seamless administrative control and user interactions.</p><h2 id="modular-plugin-based-architecture" tabindex="-1">Modular Plugin-Based Architecture <a class="header-anchor" href="#modular-plugin-based-architecture" aria-label="Permalink to &quot;Modular Plugin-Based Architecture&quot;">​</a></h2><p>Aureus ERP follows a <strong>plugin-based architecture</strong> inspired by <strong>Filament PHP plugin development patterns</strong>. Each feature is encapsulated within a plugin, making it easy to extend, maintain, and customize. The system consists of a <strong>core module</strong> and multiple plugins that can be installed or uninstalled as needed.</p><h3 id="plugin-management" tabindex="-1">Plugin Management <a class="header-anchor" href="#plugin-management" aria-label="Permalink to &quot;Plugin Management&quot;">​</a></h3><p>All plugins, except the core system, can be installed or removed dynamically using Artisan commands:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:uninstall</span></span></code></pre></div><h3 id="plugin-directory-structure" tabindex="-1">Plugin Directory Structure <a class="header-anchor" href="#plugin-directory-structure" aria-label="Permalink to &quot;Plugin Directory Structure&quot;">​</a></h3><p>All available plugins are located inside the <code>plugins/webkul</code> directory, following a structured format to ensure seamless integration with the core system.</p><h2 id="event-driven-development" tabindex="-1">Event-Driven Development <a class="header-anchor" href="#event-driven-development" aria-label="Permalink to &quot;Event-Driven Development&quot;">​</a></h2><p>Aureus ERP leverages Laravel&#39;s <strong>event-driven approach</strong> to register useful events triggered on key pages and actions. These events allow developers to hook into the system and perform <strong>custom operations</strong> without modifying the core.</p><h2 id="alpine-js-livewire-for-ui-components" tabindex="-1">Alpine.js &amp; Livewire for UI Components <a class="header-anchor" href="#alpine-js-livewire-for-ui-components" aria-label="Permalink to &quot;Alpine.js &amp; Livewire for UI Components&quot;">​</a></h2><p>Aureus ERP integrates <strong>Alpine.js</strong> and <strong>Livewire</strong> for dynamic and interactive UI components, ensuring a smooth user experience. These technologies provide a <strong>reactive interface</strong> for data management, making interactions efficient and user-friendly while keeping the frontend lightweight.</p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>Aureus ERP’s architecture is designed to be <strong>scalable, maintainable, and customizable</strong>. By leveraging <strong>Filament PHP plugins</strong>, <strong>Laravel events</strong>, and <strong>Alpine.js &amp; Livewire components</strong>, it ensures a flexible and developer-friendly ecosystem for building ERP solutions.</p>`,17)]))}const g=t(i,[["render",r]]);export{h as __pageData,g as default};
