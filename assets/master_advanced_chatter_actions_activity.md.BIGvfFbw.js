import{_ as a,c as t,o as e,ah as s}from"./chunks/framework.C2OYgiIb.js";const g=JSON.parse('{"title":"Overview","description":"","frontmatter":{},"headers":[],"relativePath":"master/advanced/chatter/actions/activity.md","filePath":"master/advanced/chatter/actions/activity.md","lastUpdated":1751441366000}'),n={name:"master/advanced/chatter/actions/activity.md"};function l(o,i,r,d,c,h){return e(),t("div",null,i[0]||(i[0]=[s('<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h1><p>The <code>ActivityAction</code> class is a FilamentPHP action that allows users to create and manage activities within the Chatter module. It provides an interactive form for selecting activity plans, defining due dates, assigning users, and logging activity details.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="getdefaultname" tabindex="-1"><code>getDefaultName()</code> <a class="header-anchor" href="#getdefaultname" aria-label="Permalink to &quot;`getDefaultName()`&quot;">​</a></h3><ul><li><strong>Returns:</strong> <code>?string</code></li><li><strong>Description:</strong> Returns the default action name, <code>&#39;activity.action&#39;</code>.</li></ul><h3 id="setactivityplans-mixed-activityplans" tabindex="-1"><code>setActivityPlans(mixed $activityPlans)</code> <a class="header-anchor" href="#setactivityplans-mixed-activityplans" aria-label="Permalink to &quot;`setActivityPlans(mixed $activityPlans)`&quot;">​</a></h3><ul><li><strong>Parameters:</strong> <code>$activityPlans</code> (mixed) - List of available activity plans.</li><li><strong>Returns:</strong> <code>self</code></li><li><strong>Description:</strong> Sets the available activity plans.</li></ul><h3 id="getactivityplans" tabindex="-1"><code>getActivityPlans()</code> <a class="header-anchor" href="#getactivityplans" aria-label="Permalink to &quot;`getActivityPlans()`&quot;">​</a></h3><ul><li><strong>Returns:</strong> <code>mixed</code></li><li><strong>Description:</strong> Retrieves the set activity plans.</li></ul><h3 id="setup" tabindex="-1"><code>setUp()</code> <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;`setUp()`&quot;">​</a></h3><ul><li><strong>Returns:</strong> <code>void</code></li><li><strong>Description:</strong> Initializes the action by defining its UI components and logic.</li></ul><h4 id="form-fields" tabindex="-1">Form Fields <a class="header-anchor" href="#form-fields" aria-label="Permalink to &quot;Form Fields&quot;">​</a></h4><ul><li><code>activity_plan_id</code>: Select dropdown for choosing an activity plan.</li><li><code>date_deadline</code>: Date picker for selecting the deadline.</li><li><code>plan_summary</code>: Displays the summary of the selected activity plan.</li><li><code>activity_type_id</code>: Select dropdown for choosing the activity type.</li><li><code>assigned_to</code>: Select dropdown for assigning the activity.</li><li><code>summary</code>: Text input for entering a summary.</li><li><code>body</code>: Rich editor for adding activity details.</li><li><code>type</code>: Hidden field storing the type of entry.</li></ul><h4 id="action-handling" tabindex="-1">Action Handling <a class="header-anchor" href="#action-handling" aria-label="Permalink to &quot;Action Handling&quot;">​</a></h4><ul><li>Retrieves the authenticated user.</li><li>Processes selected activity plans or types.</li><li>Adds messages related to the activity.</li><li>Displays success or error notifications.</li></ul><h3 id="action-array-data-model-record-null" tabindex="-1"><code>action(array $data, ?Model $record = null)</code> <a class="header-anchor" href="#action-array-data-model-record-null" aria-label="Permalink to &quot;`action(array $data, ?Model $record = null)`&quot;">​</a></h3><ul><li><strong>Parameters:</strong><ul><li><code>$data</code>: Array containing form data.</li><li><code>$record</code>: The model instance the action is applied to.</li></ul></li><li><strong>Returns:</strong> <code>void</code></li><li><strong>Description:</strong> Handles the action execution by: <ul><li>Assigning default values if needed.</li><li>Processing activity plans and types.</li><li>Logging messages into the chatter system.</li><li>Sending notifications.</li></ul></li></ul><h3 id="modalsubmitaction" tabindex="-1"><code>modalSubmitAction()</code> <a class="header-anchor" href="#modalsubmitaction" aria-label="Permalink to &quot;`modalSubmitAction()`&quot;">​</a></h3><ul><li><strong>Parameters:</strong> <code>$action</code></li><li><strong>Returns:</strong> <code>void</code></li><li><strong>Description:</strong> Customizes the submit button in the modal with a label and icon.</li></ul><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>This action can be registered within Filament resources to provide users the ability to create and manage activities directly from the UI.</p><p>Example registration:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Chatter\\Filament\\Actions\\Chatter\\ActivityAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ActivityAction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setActivityPlans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($availablePlans)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modalIcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;heroicon-o-clock&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Schedule Activity&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',23)]))}const u=a(n,[["render",l]]);export{g as __pageData,u as default};
