import{_ as i,c as a,o as n,ah as e}from"./chunks/framework.C2OYgiIb.js";const d=JSON.parse('{"title":"Migrations","description":"","frontmatter":{},"headers":[],"relativePath":"master/getting-started/migrations.md","filePath":"master/getting-started/migrations.md","lastUpdated":1751441366000}'),t={name:"master/getting-started/migrations.md"};function l(p,s,h,r,k,g){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="migrations" tabindex="-1"><strong>Migrations</strong> <a class="header-anchor" href="#migrations" aria-label="Permalink to &quot;**Migrations**&quot;">​</a></h1><p><a href="https://laravel.com/docs/11.x/migrations" target="_blank" rel="noreferrer">Migrations</a> provide a structured way to manage database schemas, enabling version control for database changes. They ensure consistency across development and production environments.</p><h2 id="key-features-of-migrations" tabindex="-1"><strong>Key Features of Migrations</strong> <a class="header-anchor" href="#key-features-of-migrations" aria-label="Permalink to &quot;**Key Features of Migrations**&quot;">​</a></h2><ul><li><strong>Version Control:</strong> Track database changes efficiently.</li><li><strong>Schema Management:</strong> Modify tables, columns, indexes, and constraints easily.</li><li><strong>Rollback &amp; Refresh:</strong> Revert changes without losing data integrity.</li><li><strong>Seeding Support:</strong> Populate tables with default data using seeders.</li></ul><h2 id="creating-a-migration" tabindex="-1"><strong>Creating a Migration</strong> <a class="header-anchor" href="#creating-a-migration" aria-label="Permalink to &quot;**Creating a Migration**&quot;">​</a></h2><p>You can create a migration using the following Artisan command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create_posts_table</span></span></code></pre></div><p>Alternatively, you can generate a model along with its migration using:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Post</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span></span></code></pre></div><p>This will create:</p><ul><li>A model file in <code>app/Models/Post.php</code></li><li>A migration file in <code>database/migrations/</code></li></ul><h2 id="organizing-migrations-in-plugin-structure" tabindex="-1"><strong>Organizing Migrations in Plugin Structure</strong> <a class="header-anchor" href="#organizing-migrations-in-plugin-structure" aria-label="Permalink to &quot;**Organizing Migrations in Plugin Structure**&quot;">​</a></h2><p>Once a migration or model is created, you need to place them in the appropriate directories within the plugin structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>+-- plugins</span></span>
<span class="line"><span>|   +-- webkul</span></span>
<span class="line"><span>|   |   +-- blogs</span></span>
<span class="line"><span>|   |   |   +-- database</span></span>
<span class="line"><span>|   |   |   |   +-- factories</span></span>
<span class="line"><span>|   |   |   |   +-- migrations  # Place migration files here</span></span>
<span class="line"><span>|   |   |   |   +-- seeders</span></span>
<span class="line"><span>|   |   |   |   +-- settings</span></span>
<span class="line"><span>|   |   |   +-- resources</span></span>
<span class="line"><span>|   |   |   +-- src</span></span>
<span class="line"><span>|   |   |   |   +-- Filament</span></span>
<span class="line"><span>|   |   |   |   |   +-- Clusters</span></span>
<span class="line"><span>|   |   |   |   |   |   +-- Blogs.php</span></span>
<span class="line"><span>|   |   |   |   |   |   +-- Blogs</span></span>
<span class="line"><span>|   |   |   |   |   |   |   +-- Resources</span></span>
<span class="line"><span>|   |   |   |   |   |   |   |   +-- BlogResource.php</span></span>
<span class="line"><span>|   |   |   |   |   |   |   |   +-- BlogResource</span></span>
<span class="line"><span>|   |   |   |   |   |   |   |   |   +-- Pages</span></span>
<span class="line"><span>|   |   |   |   |   |   |   |   |   |   +-- CreateBlog.php</span></span>
<span class="line"><span>|   |   |   |   |   |   |   |   |   |   +-- EditBlog.php</span></span>
<span class="line"><span>|   |   |   |   |   |   |   |   |   |   +-- ListBlogs.php</span></span>
<span class="line"><span>|   |   |   |   +-- Models  # Place your model here and update its namespace</span></span></code></pre></div><h2 id="registering-migrations-in-the-plugin-service-provider" tabindex="-1"><strong>Registering Migrations in the Plugin Service Provider</strong> <a class="header-anchor" href="#registering-migrations-in-the-plugin-service-provider" aria-label="Permalink to &quot;**Registering Migrations in the Plugin Service Provider**&quot;">​</a></h2><p>After placing the migration files, they must be registered within the corresponding <strong>Service Provider</strong> of the plugin. This ensures that migrations are loaded when running <code>php artisan migrate</code>.</p><h3 id="example-blogserviceprovider-php" tabindex="-1"><strong>Example: BlogServiceProvider.php</strong> <a class="header-anchor" href="#example-blogserviceprovider-php" aria-label="Permalink to &quot;**Example: BlogServiceProvider.php**&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Webkul\\Blog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\Facades\\DB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\Facades\\Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Support\\Console\\Commands\\InstallCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Support\\Console\\Commands\\UninstallCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Support\\Package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Support\\PackageServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BlogServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageServiceProvider</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;blogs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $viewNamespace </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;blogs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> configureCustomPackage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $package)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        $package</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasViews</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasTranslations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasMigrations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;2025_01_06_072032_create_posts_table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Register the migration file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runsMigrations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Ensure the migrations run when needed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasInstallCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InstallCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $command) {})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasUninstallCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UninstallCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $command) {});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> packageBooted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="understanding-migration-registration" tabindex="-1"><strong>Understanding Migration Registration</strong> <a class="header-anchor" href="#understanding-migration-registration" aria-label="Permalink to &quot;**Understanding Migration Registration**&quot;">​</a></h2><ol><li><p><strong><code>hasMigrations([...])</code></strong></p><ul><li>This method registers the migration file inside the plugin.</li><li>The filename should match the migration file placed in <code>database/migrations/</code>.</li><li>Example: <code>&#39;2025_01_06_072032_create_posts_table&#39;</code></li></ul></li><li><p><strong><code>runsMigrations()</code></strong></p><ul><li>This method ensures that the registered migrations will run automatically when executing <code>php artisan migrate</code>.</li></ul></li></ol><p>When you install plugins all configured migrations, settings and other configuration will be runs else, you can run migrations manually</p><h3 id="running-migrations-manually" tabindex="-1"><strong>Running Migrations manually</strong> <a class="header-anchor" href="#running-migrations-manually" aria-label="Permalink to &quot;**Running Migrations manually**&quot;">​</a></h3><p>After registration, you can apply migrations using:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span></code></pre></div><p>To rollback the last migration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate:rollback</span></span></code></pre></div><p>To reset all migrations and re-run them:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate:refresh</span></span></code></pre></div>`,28)]))}const c=i(t,[["render",l]]);export{d as __pageData,c as default};
